{"version":3,"sources":["components/Counter.js","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","type","onClick","App","state","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iNAGO,SAASA,EAAT,GAAuD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC/C,OACE,oCACE,4BAAKH,GAEL,4BACEI,KAAK,SACLC,QAASJ,GAFX,UAOA,4BACEG,KAAK,SACLC,QAASH,GAFX,UAOA,4BACEE,KAAK,SACLC,QAASF,GAFX,a,ICqBSG,E,4MAtCbC,MAAQ,CACNP,MAAO,G,EAGTC,OAAS,WACP,EAAKO,UAAS,SAAAC,GAAS,MAAK,CAC1BT,MAAOS,EAAUT,MAAQ,O,EAI7BE,OAAS,WACP,EAAKM,UAAS,SAAAC,GAAS,MAAK,CAC1BT,MAAOS,EAAUT,MAAQ,S,EAI7BG,SAAW,WACT,EAAKK,UAAS,SAACC,GAKb,OAJIA,EAAUT,MAAQ,IAAM,GAC1B,EAAKE,SAGA,EAAKD,a,4CAIhB,WACE,OACE,kBAACF,EAAD,CACEC,MAAOU,KAAKH,MAAMP,MAClBC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,e,GAjCLQ,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cd1fe021.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Counter({ count, addOne, add100, increase }) {\n  return (\n    <>\n      <h1>{count}</h1>\n\n      <button\n        type=\"button\"\n        onClick={addOne}\n      >\n        addOne\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={add100}\n      >\n        add100\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={increase}\n      >\n        increase\n      </button>\n    </>\n  );\n}\n\nCounter.propTypes = PropTypes.shape({\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(prevState => ({\n      count: prevState.count + 100,\n    }));\n  };\n\n  increase = () => {\n    this.setState((prevState) => {\n      if (prevState.count % 5 === 0) {\n        this.add100();\n      }\n\n      return this.addOne();\n    });\n  };\n\n  render() {\n    return (\n      <Counter\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}